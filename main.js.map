{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./libs/interfaces/src/index.ts","webpack:///external \"tslib\"","webpack:///external \"tsoa\"","webpack:///external \"near-api-js\"","webpack:///./libs/multi-chain/src/index.ts","webpack:///./libs/multi-chain/src/lib/utils.ts","webpack:///./libs/interfaces/src/lib/configs.ts","webpack:///external \"elliptic\"","webpack:///external \"near-api-js/lib/utils\"","webpack:///./apps/api/src/app/config/constants.ts","webpack:///external \"js-sha3\"","webpack:///external \"tweetnacl\"","webpack:///./libs/multi-chain/src/lib/interfaces/base-classes.ts","webpack:///./apps/api/src/environments/environment.prod.ts","webpack:///external \"bs58\"","webpack:///external \"body-parser\"","webpack:///external \"@tsoa/runtime\"","webpack:///./apps/api/src/app/controllers/DiscordController.ts","webpack:///./apps/api/src/app/service/discord.ts","webpack:///./libs/multi-chain/src/lib/near/index.ts","webpack:///./libs/multi-chain/src/lib/near/signer.ts","webpack:///./libs/interfaces/src/lib/chains.ts","webpack:///./libs/interfaces/src/lib/near.ts","webpack:///./libs/interfaces/src/lib/crypto.ts","webpack:///./libs/multi-chain/src/lib/near/account.ts","webpack:///./libs/multi-chain/src/lib/crypto/index.ts","webpack:///./libs/multi-chain/src/lib/crypto/keys.ts","webpack:///external \"js-sha256\"","webpack:///external \"buffer\"","webpack:///external \"bn.js\"","webpack:///external \"near-api-js/lib/account_creator\"","webpack:///external \"near-api-js/lib/key_stores\"","webpack:///external \"express\"","webpack:///./apps/api/build/routes.ts","webpack:///external \"form-data\"","webpack:///external \"axios\"","webpack:///external \"dotenv\"","webpack:///./apps/api/src/app/controllers/NearController.ts","webpack:///./apps/api/src/app/service/near.ts","webpack:///external \"cors\"","webpack:///./apps/api/src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 40);\n","export * from './lib/configs';\nexport * from './lib/chains';\nexport * from './lib/near';\nexport * from './lib/crypto';\n","module.exports = require(\"tslib\");","module.exports = require(\"tsoa\");","module.exports = require(\"near-api-js\");","export * from './lib/interfaces/base-classes';\nexport * from './lib/near';\nexport * from './lib/utils';\nexport * from './lib/crypto';\n","import { KeyFormats, PublicKey, SecretKey } from '@baf-wallet/interfaces';\nimport * as bs58 from 'bs58';\n\nexport function formatKey(\n  key: PublicKey | SecretKey,\n  keyFormat = KeyFormats.hex\n) {\n  switch (keyFormat) {\n    case KeyFormats.hex:\n      return Buffer.from(key).toString('hex');\n    case KeyFormats.bs58:\n      return bs58.encode(Buffer.from(key));\n  }\n}\n\nexport function keyFromString(\n  key: string,\n  keyFormat = KeyFormats.hex\n): PublicKey | SecretKey {\n  switch (keyFormat) {\n    case KeyFormats.hex:\n      return Buffer.from(key, 'hex');\n    case KeyFormats.bs58:\n      return Buffer.from(bs58.decode(key));\n  }\n}\n","export enum Envs {\n  DEV,\n  TEST,\n  PROD,\n}\n","module.exports = require(\"elliptic\");","module.exports = require(\"near-api-js/lib/utils\");","import { getNearNetworkId } from '@baf-wallet/interfaces';\nimport { environment } from '../../environments/environment';\n\nimport { initDotEnv } from '../../environments/environment';\ninitDotEnv();\n\nexport const constants = {\n  nearAccountConfig: {\n    keyPath: process.env.NEAR_KEYPATH,\n    networkId: getNearNetworkId(environment.env),\n    masterAccountId: process.env.NEAR_MASTER_ACCOUNT_ID,\n  },\n  discord: {\n    clientId: process.env.DISCORD_CLIENT_ID,\n    clientSecret: process.env.DISCORD_CLIENT_SECRET,\n  },\n};\n","module.exports = require(\"js-sha3\");","module.exports = require(\"tweetnacl\");","import { Chain, PublicKey, SecretKey } from '@baf-wallet/interfaces';\nimport { ec, eddsa } from 'elliptic';\nimport * as sha3 from 'js-sha3';\nimport { inspect } from 'util';\nconst ecSecp = new ec('secp256k1');\nconst ecEd = new eddsa('ed25519');\n\nexport abstract class Signer<SendOpts, TX> {\n  constructor(public chain: Chain) {}\n\n  abstract awaitConstructorInit(): Promise<void>;\n\n  // Return an explorer link\n  abstract createTX(signedTX: SendOpts): Promise<TX>;\n\n  // Return an explorer link\n  abstract signTX(tx: TX): Promise<Uint8Array>;\n\n  // Return an explorer link\n  abstract sendTX(signedTX: Uint8Array): Promise<string>;\n\n  public static deserializeSendTXOpts<SendOpts>(opts: string): SendOpts {\n    try {\n      return (JSON.parse(decodeURIComponent(opts)) as any) as SendOpts;\n    } catch (e) {\n      throw `Error deserializing ${opts}: ${e}`;\n    }\n  }\n\n  static serializeSendTXOpts<SendOpts>(opts: SendOpts): string {\n    return encodeURIComponent(JSON.stringify(opts));\n  }\n}\n\nexport abstract class ChainUtil {\n  constructor(public chain: Chain) {}\n\n  public static verifySignedEd25519(\n    pubkey: PublicKey,\n    msg: string,\n    signedMsg: eddsa.Signature\n  ): boolean {\n    const msgHash = sha3.keccak256(msg);\n\n    let validSig = ecEd.verify(\n      msgHash,\n      signedMsg,\n      Buffer.from(pubkey).toString('hex')\n    );\n    return validSig;\n  }\n\n  public static signEd25519(sk: SecretKey, msg: string): eddsa.Signature {\n    const msgHash = sha3.keccak256(msg);\n    const sig = ecEd.sign(msgHash, Buffer.from(sk).toString('hex'));\n    return sig;\n  }\n\n  public static verifySignedSecp256k1(\n    pubkey: PublicKey,\n    msg: string,\n    signedMsg: ec.Signature\n  ): boolean {\n    const msgHash = sha3.keccak256(msg);\n    let validSig = ecSecp.verify(msgHash, signedMsg, Buffer.from(pubkey));\n    return validSig;\n  }\n\n  public static signSecp256k1(sk: SecretKey, msg: string): ec.Signature {\n    const msgHash = sha3.keccak256(msg);\n    const sig = ecSecp.sign(msgHash, sk, 'hex', {\n      canonical: true,\n    });\n    return sig;\n  }\n\n  public static createUserVerifyMessage(userId: string, nonce: string) {\n    return `${userId}:${nonce}`;\n  }\n}\n","import { Envs } from '@baf-wallet/interfaces';\nimport { config as dotenvConfig } from 'dotenv';\n\nexport function initDotEnv() {\n  dotenvConfig({ path: './apps/api/src/environments/.env.prod' });\n}\n\nexport const environment = {\n  env: Envs.DEV,\n  production: true,\n};\n","module.exports = require(\"bs58\");","module.exports = require(\"body-parser\");","module.exports = require(\"@tsoa/runtime\");","import { Body, Controller, Post, Route, SuccessResponse } from 'tsoa';\nimport { getPubkeyForUser, discordRevokeAccessToken } from '../service/discord';\n\ninterface RevokeTokenParams {\n  token: string;\n}\n\ninterface GetPubkeyForUserParams {\n  username: string;\n  tag: number;\n}\n\n@Route('discord')\nexport class DiscordController extends Controller {\n  @SuccessResponse('204')\n  @Post('revoke-token')\n  public async revokeToken(\n    @Body() accessToken: RevokeTokenParams\n  ): Promise<void> {\n    await discordRevokeAccessToken(accessToken.token);\n  }\n\n  @SuccessResponse('200')\n  @Post('get-pubkey-for-user')\n  public async getPubkeyForUser(\n    @Body() requestBody: GetPubkeyForUserParams\n  ): Promise<string> {\n    const { username, tag } = requestBody;\n    return getPubkeyForUser(username, tag);\n  }\n}\n","import FormData from 'form-data';\nimport axios from 'axios';\nimport { constants } from '../config/constants';\nimport { CryptoCurves } from '@baf-wallet/interfaces';\n\nexport async function discordRevokeAccessToken(token: string) {\n  const formData = new FormData();\n  formData.append('token', token);\n  await axios.post('https://discordapp.com/api/oauth2/token/revoke', formData, {\n    headers: {\n      ...formData.getHeaders(),\n      Authorization: `Basic ${Buffer.from(\n        `${constants.discord.clientId}:${constants.discord.clientSecret}`,\n        'binary'\n      ).toString('base64')}`,\n    },\n  });\n}\n\n// TODO: spec out\nexport async function getPubkeyForUser(\n  username: string,\n  tag: number\n): Promise<string> {\n  // check tag to make sure it is a 4-digit number, return a helpful error if it isn't\n  // try to get the user info object from the discord api, return a helpful error if it DNE\n  // use torus's `getPublicAddress` method to get the pubkey given the user ID\n  return 'unimplemented';\n}\n","export * from './signer';\nexport * from './account';\n","import { Signer } from '../interfaces/base-classes';\nimport {\n  KeyPair,\n  keyStores,\n  providers,\n  transactions,\n  utils,\n} from 'near-api-js';\nimport {\n  Chain,\n  KeyFormats,\n  NearAction,\n  SecretKey,\n  NearSupportedActionTypes,\n  NearTransferParam,\n} from '@baf-wallet/interfaces';\nimport type { NearNetworkId } from '@baf-wallet/interfaces';\nimport { sha256 } from 'js-sha256';\nimport { Buffer } from 'buffer';\nimport { formatKey } from '../utils';\nimport { Action as NearNativeAction } from 'near-api-js/lib/transaction';\nimport BN from 'bn.js';\n\nexport interface NearSendTXOpts {\n  actions: NearAction[];\n  receiverAccountId: string;\n}\n\nexport class NearSigner extends Signer<\n  NearSendTXOpts,\n  transactions.Transaction\n> {\n  private keyStore: keyStores.InMemoryKeyStore;\n  private initProm: Promise<void>;\n  private provider: providers.JsonRpcProvider;\n\n  constructor(\n    privKey: SecretKey,\n    private accountId: string,\n    private networkId: NearNetworkId\n  ) {\n    super(Chain.NEAR);\n    this.keyStore = new keyStores.InMemoryKeyStore();\n    const keyPair = KeyPair.fromString(formatKey(privKey, KeyFormats.bs58));\n    this.initProm = this.keyStore.setKey(\n      this.networkId,\n      this.accountId,\n      keyPair\n    );\n    this.provider = new providers.JsonRpcProvider(\n      `https://rpc.${networkId}.near.org`\n    );\n  }\n\n  public async awaitConstructorInit() {\n    return this.initProm;\n  }\n\n  private buildNativeAction(action: NearAction): NearNativeAction {\n    switch (action.type) {\n      case NearSupportedActionTypes.TRANSFER:\n        if (action.params.discriminator !== NearSupportedActionTypes.TRANSFER) {\n          throw 'the input parameters do not match the call';\n        }\n        return transactions.transfer(\n          new BN((action.params as NearTransferParam).amount)\n        );\n      default:\n        throw `Action of type ${action.type} is unsupported`;\n    }\n  }\n\n  public async createTX(\n    opts: NearSendTXOpts\n  ): Promise<transactions.Transaction> {\n    const keyPair = await this.keyStore.getKey(this.networkId, this.accountId);\n    const pubkey = keyPair.getPublicKey();\n    const accessKey = await this.provider.query(\n      `access_key/${this.accountId}/${pubkey.toString()}`,\n      ''\n    );\n    const nonce = ++accessKey.nonce;\n    const recentBlockHash = utils.serialize.base_decode(accessKey.block_hash);\n\n    return transactions.createTransaction(\n      this.accountId,\n      pubkey,\n      opts.receiverAccountId,\n      nonce,\n      opts.actions.map(this.buildNativeAction),\n      recentBlockHash\n    );\n  }\n\n  public async signTX(tx: transactions.Transaction): Promise<Uint8Array> {\n    const keyPair = await this.keyStore.getKey(this.networkId, this.accountId);\n    const serializedTx = utils.serialize.serialize(transactions.SCHEMA, tx);\n    const serializedTxHash = new Uint8Array(sha256.array(serializedTx));\n    const signature = keyPair.sign(serializedTxHash);\n    const signedTransaction = new transactions.SignedTransaction({\n      tx,\n      signature: new transactions.Signature({\n        keyType: tx.publicKey.keyType,\n        data: signature.signature,\n      }),\n    });\n    // encodes transaction to serialized Borsh (required for all transactions)\n    const signedSerializedTx = signedTransaction.encode();\n    return signedSerializedTx;\n  }\n\n  public async sendTX(signedTX: Uint8Array): Promise<string> {\n    // sends transaction to NEAR blockchain via JSON RPC call and records the result\n    const result = await this.provider.sendJsonRpc('broadcast_tx_commit', [\n      Buffer.from(signedTX).toString('base64'),\n    ]);\n    const transactionLink = `https://explorer.${this.networkId}.near.org/transactions/${result.transaction.hash}`;\n    return transactionLink;\n  }\n}\n","export enum Chain {\n  NEAR = 'near',\n}\n","import { Envs } from './configs';\n\nexport enum NearNetworkId {\n  DEVNET = 'testnet',\n  TESTNET = 'testnet',\n  MAINNET = 'mainnet',\n}\n\nexport function getNearNetworkId(env: Envs): NearNetworkId {\n  switch (env) {\n    case Envs.DEV:\n      return NearNetworkId.DEVNET;\n    case Envs.TEST:\n      return NearNetworkId.TESTNET;\n    case Envs.PROD:\n      return NearNetworkId.MAINNET;\n    default:\n      return NearNetworkId.DEVNET;\n  }\n}\n\nexport enum NearSupportedActionTypes {\n  TRANSFER = 'transfer',\n}\n\ninterface NearActionParam {\n  // used to type check the parameter input\n  discriminator: NearSupportedActionTypes;\n}\n\nexport interface NearTransferParam extends NearActionParam {\n  // a string number value in Yocto\n  amount: string;\n}\n\nexport interface NearAction {\n  type: NearSupportedActionTypes;\n  params: NearTransferParam | NearActionParam;\n}\n","export enum CryptoCurves {\n  secp256k1 = 'secp256k1',\n  ed25519 = 'ed25519',\n}\n\nexport enum KeyFormats {\n  bs58,\n  hex,\n}\n\nexport type PublicKey = Buffer;\nexport type SecretKey = Buffer;\n","import {\n  CryptoCurves,\n  KeyFormats,\n  NearNetworkId,\n  SecretKey,\n} from '@baf-wallet/interfaces';\nimport { Account, connect, ConnectConfig, KeyPair, Near } from 'near-api-js';\nimport {\n  AccountCreator,\n  UrlAccountCreator,\n} from 'near-api-js/lib/account_creator';\nimport { InMemoryKeyStore, KeyStore } from 'near-api-js/lib/key_stores';\nimport { PublicKey } from '@baf-wallet/interfaces';\nimport { formatKey } from '../utils';\nimport { KeyPairEd25519 } from 'near-api-js/lib/utils';\n\nexport interface NearAccountParams {\n  networkId: NearNetworkId;\n  keyPath: string;\n  masterAccountId: string;\n}\n\ninterface NearAccountParamsInternal {\n  masterAccountId: string;\n  connectConfig: ConnectConfig;\n}\n\nexport class NearAccount {\n  private static nearSingleton: NearAccount | null;\n  private static initParams: NearAccountParamsInternal | null;\n\n  private constructor(\n    public near: Near,\n    public masterAccount: Account,\n    public accountCreator: AccountCreator,\n    private keyStore: KeyStore,\n    private params: NearAccountParamsInternal\n  ) {}\n\n  static setConfig(params: NearAccountParams) {\n    this.initParams = {\n      masterAccountId: params.masterAccountId,\n      connectConfig: {\n        networkId: params.networkId,\n        nodeUrl: `https://rpc.${params.networkId}.near.org`,\n        helperUrl: `https://helper.${params.networkId}.near.org`,\n        masterAccount: params.masterAccountId,\n        keyPath: params.keyPath,\n      },\n    };\n  }\n\n  static async get(): Promise<NearAccount> {\n    if (!this.initParams) {\n      throw 'Near params must be set prior to calling getNea';\n    }\n    if (this.nearSingleton) {\n      return this.nearSingleton;\n    }\n    const keyStore =\n      this.initParams.connectConfig.deps?.keyStore || new InMemoryKeyStore();\n    this.initParams.connectConfig.deps = {\n      ...(this.initParams.connectConfig.deps?.keyStore || {}),\n      keyStore: keyStore,\n    };\n    const near = await connect(this.initParams.connectConfig);\n\n    // const masterAccount = (near.accountCreator as LocalAccountCreator).masterAccount;\n    // near.connection.provider\n    const masterAccount = await near.account(this.initParams.masterAccountId);\n    const urlAccountCreator = new UrlAccountCreator(\n      near.connection,\n      this.initParams.connectConfig.helperUrl\n    );\n\n    // masterAccount.connection.signer;\n    this.nearSingleton = new NearAccount(\n      near,\n      masterAccount,\n      urlAccountCreator,\n      keyStore,\n      this.initParams\n    );\n    return this.nearSingleton;\n  }\n\n  getAccountNameFromPubkey(pubkey: PublicKey, curve: CryptoCurves) {\n    return NearAccount.getAccountNameFromPubkey(\n      pubkey,\n      curve,\n      this.params.connectConfig.networkId as NearNetworkId\n    );\n  }\n\n  static getAccountNameFromPubkey(\n    pubkey: PublicKey,\n    curve: CryptoCurves,\n    networkId: NearNetworkId\n  ): string {\n    return `${curve}_${formatKey(pubkey, KeyFormats.bs58)}.${\n      networkId === NearNetworkId.MAINNET ? 'near' : networkId\n    }`.toLowerCase();\n  }\n\n  async updateKeyPair(accountId: string, secret: SecretKey) {\n    const newKeyPair = new KeyPairEd25519(formatKey(secret, KeyFormats.bs58));\n    await this.keyStore.setKey(\n      this.params.connectConfig.networkId,\n      accountId,\n      newKeyPair\n    );\n  }\n}\n","export * from './keys';\n","import { PublicKey, SecretKey } from '@baf-wallet/interfaces';\nimport { ec as EC } from 'elliptic';\nimport * as nacl from 'tweetnacl';\n\nconst secp256k1 = new EC('secp256k1');\n\nexport function edPubkeyFromSK(secret: SecretKey): PublicKey {\n  return Buffer.from(\n    nacl.sign.keyPair.fromSecretKey(new Uint8Array(secret)).publicKey\n  );\n}\n\nexport function secpPubkeyFromSK(secret: SecretKey): PublicKey {\n  return Buffer.from(\n    secp256k1.keyFromPrivate(secret).getPublic(true, 'hex'),\n    'hex'\n  );\n}\n\nexport function edSKFromSeed(seed: Uint8Array): SecretKey {\n  return Buffer.from(\n    nacl.sign.keyPair.fromSeed(new Uint8Array(Buffer.from(seed))).secretKey\n  );\n}\n\nexport function secpSKFromSeed(seed: Uint8Array): SecretKey {\n  const entropy = nacl.hash(seed);\n  const sk = secp256k1.genKeyPair({ entropy }).getPrivate('hex');\n\n  console.log(sk);\n\n  return Buffer.from(sk, 'hex');\n}\n\nexport function edSKFromRng(): SecretKey {\n  return Buffer.from(nacl.sign.keyPair().secretKey);\n}\n\nexport function secpSKFromRng(): SecretKey {\n  return Buffer.from(secp256k1.genKeyPair().getPrivate('hex'), 'hex');\n}\n","module.exports = require(\"js-sha256\");","module.exports = require(\"buffer\");","module.exports = require(\"bn.js\");","module.exports = require(\"near-api-js/lib/account_creator\");","module.exports = require(\"near-api-js/lib/key_stores\");","module.exports = require(\"express\");","/* tslint:disable */\n/* eslint-disable */\n// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\nimport { Controller, ValidationService, FieldErrors, ValidateError, TsoaRoute, HttpStatusCodeLiteral, TsoaResponse } from '@tsoa/runtime';\n// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\nimport { DiscordController } from './../src/app/controllers/DiscordController';\n// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\nimport { NearController } from './../src/app/controllers/NearController';\nimport * as express from 'express';\n\n// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\n\nconst models: TsoaRoute.Models = {\n    \"RevokeTokenParams\": {\n        \"dataType\": \"refObject\",\n        \"properties\": {\n            \"token\": {\"dataType\":\"string\",\"required\":true},\n        },\n        \"additionalProperties\": false,\n    },\n    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\n    \"GetPubkeyForUserParams\": {\n        \"dataType\": \"refObject\",\n        \"properties\": {\n            \"username\": {\"dataType\":\"string\",\"required\":true},\n            \"tag\": {\"dataType\":\"double\",\"required\":true},\n        },\n        \"additionalProperties\": false,\n    },\n    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\n    \"BN\": {\n        \"dataType\": \"refAlias\",\n        \"type\": {\"dataType\":\"string\",\"validators\":{}},\n    },\n    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\n    \"ec.Signature\": {\n        \"dataType\": \"refObject\",\n        \"properties\": {\n            \"r\": {\"ref\":\"BN\",\"required\":true},\n            \"s\": {\"ref\":\"BN\",\"required\":true},\n            \"recoveryParam\": {\"dataType\":\"union\",\"subSchemas\":[{\"dataType\":\"double\"},{\"dataType\":\"enum\",\"enums\":[null]}],\"required\":true},\n        },\n        \"additionalProperties\": false,\n    },\n    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\n    \"PublicKeyWrapper\": {\n        \"dataType\": \"refObject\",\n        \"properties\": {\n            \"pk\": {\"dataType\":\"buffer\",\"required\":true},\n        },\n        \"additionalProperties\": false,\n    },\n    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\n    \"eddsa.Signature\": {\n        \"dataType\": \"refObject\",\n        \"properties\": {\n        },\n        \"additionalProperties\": false,\n    },\n    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\n    \"CreateNearAccountParams\": {\n        \"dataType\": \"refObject\",\n        \"properties\": {\n            \"discordUserId\": {\"dataType\":\"string\",\"required\":true},\n            \"nonce\": {\"dataType\":\"string\",\"required\":true},\n            \"secpSig\": {\"ref\":\"ec.Signature\",\"required\":true},\n            \"edPubkey\": {\"ref\":\"PublicKeyWrapper\",\"required\":true},\n            \"edSig\": {\"ref\":\"eddsa.Signature\",\"required\":true},\n        },\n        \"additionalProperties\": false,\n    },\n    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\n};\nconst validationService = new ValidationService(models);\n\n// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\n\nexport function RegisterRoutes(app: express.Router) {\n    // ###########################################################################################################\n    //  NOTE: If you do not see routes for all of your controllers in this file, then you might not have informed tsoa of where to look\n    //      Please look into the \"controllerPathGlobs\" config option described in the readme: https://github.com/lukeautry/tsoa\n    // ###########################################################################################################\n        app.post('/discord/revoke-token',\n            function DiscordController_revokeToken(request: any, response: any, next: any) {\n            const args = {\n                    accessToken: {\"in\":\"body\",\"name\":\"accessToken\",\"required\":true,\"ref\":\"RevokeTokenParams\"},\n            };\n\n            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\n\n            let validatedArgs: any[] = [];\n            try {\n                validatedArgs = getValidatedArgs(args, request, response);\n            } catch (err) {\n                return next(err);\n            }\n\n            const controller = new DiscordController();\n\n\n            const promise = controller.revokeToken.apply(controller, validatedArgs as any);\n            promiseHandler(controller, promise, response, undefined, next);\n        });\n        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\n        app.post('/discord/get-pubkey-for-user',\n            function DiscordController_getPubkeyForUser(request: any, response: any, next: any) {\n            const args = {\n                    requestBody: {\"in\":\"body\",\"name\":\"requestBody\",\"required\":true,\"ref\":\"GetPubkeyForUserParams\"},\n            };\n\n            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\n\n            let validatedArgs: any[] = [];\n            try {\n                validatedArgs = getValidatedArgs(args, request, response);\n            } catch (err) {\n                return next(err);\n            }\n\n            const controller = new DiscordController();\n\n\n            const promise = controller.getPubkeyForUser.apply(controller, validatedArgs as any);\n            promiseHandler(controller, promise, response, undefined, next);\n        });\n        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\n        app.post('/near/account',\n            function NearController_createNearAccount(request: any, response: any, next: any) {\n            const args = {\n                    requestBody: {\"in\":\"body\",\"name\":\"requestBody\",\"required\":true,\"ref\":\"CreateNearAccountParams\"},\n            };\n\n            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\n\n            let validatedArgs: any[] = [];\n            try {\n                validatedArgs = getValidatedArgs(args, request, response);\n            } catch (err) {\n                return next(err);\n            }\n\n            const controller = new NearController();\n\n\n            const promise = controller.createNearAccount.apply(controller, validatedArgs as any);\n            promiseHandler(controller, promise, response, undefined, next);\n        });\n        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\n\n    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\n\n\n    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\n\n    function isController(object: any): object is Controller {\n        return 'getHeaders' in object && 'getStatus' in object && 'setStatus' in object;\n    }\n\n    function promiseHandler(controllerObj: any, promise: any, response: any, successStatus: any, next: any) {\n        return Promise.resolve(promise)\n            .then((data: any) => {\n                let statusCode = successStatus;\n                let headers;\n                if (isController(controllerObj)) {\n                    headers = controllerObj.getHeaders();\n                    statusCode = controllerObj.getStatus() || statusCode;\n                }\n\n                // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\n\n                returnHandler(response, statusCode, data, headers)\n            })\n            .catch((error: any) => next(error));\n    }\n\n    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\n\n    function returnHandler(response: any, statusCode?: number, data?: any, headers: any = {}) {\n        if (response.headersSent) {\n            return;\n        }\n        Object.keys(headers).forEach((name: string) => {\n            response.set(name, headers[name]);\n        });\n        if (data && typeof data.pipe === 'function' && data.readable && typeof data._read === 'function') {\n            data.pipe(response);\n        } else if (data !== null && data !== undefined) {\n            response.status(statusCode || 200).json(data);\n        } else {\n            response.status(statusCode || 204).end();\n        }\n    }\n\n    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\n\n    function responder(response: any): TsoaResponse<HttpStatusCodeLiteral, unknown>  {\n        return function(status, data, headers) {\n            returnHandler(response, status, data, headers);\n        };\n    };\n\n    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\n\n    function getValidatedArgs(args: any, request: any, response: any): any[] {\n        const fieldErrors: FieldErrors  = {};\n        const values = Object.keys(args).map((key) => {\n            const name = args[key].name;\n            switch (args[key].in) {\n                case 'request':\n                    return request;\n                case 'query':\n                    return validationService.ValidateParam(args[key], request.query[name], name, fieldErrors, undefined, {\"noImplicitAdditionalProperties\":\"throw-on-extras\"});\n                case 'path':\n                    return validationService.ValidateParam(args[key], request.params[name], name, fieldErrors, undefined, {\"noImplicitAdditionalProperties\":\"throw-on-extras\"});\n                case 'header':\n                    return validationService.ValidateParam(args[key], request.header(name), name, fieldErrors, undefined, {\"noImplicitAdditionalProperties\":\"throw-on-extras\"});\n                case 'body':\n                    return validationService.ValidateParam(args[key], request.body, name, fieldErrors, undefined, {\"noImplicitAdditionalProperties\":\"throw-on-extras\"});\n                case 'body-prop':\n                    return validationService.ValidateParam(args[key], request.body[name], name, fieldErrors, 'body.', {\"noImplicitAdditionalProperties\":\"throw-on-extras\"});\n                case 'formData':\n                    if (args[key].dataType === 'file') {\n                        return validationService.ValidateParam(args[key], request.file, name, fieldErrors, undefined, {\"noImplicitAdditionalProperties\":\"throw-on-extras\"});\n                    } else if (args[key].dataType === 'array' && args[key].array.dataType === 'file') {\n                        return validationService.ValidateParam(args[key], request.files, name, fieldErrors, undefined, {\"noImplicitAdditionalProperties\":\"throw-on-extras\"});\n                    } else {\n                        return validationService.ValidateParam(args[key], request.body[name], name, fieldErrors, undefined, {\"noImplicitAdditionalProperties\":\"throw-on-extras\"});\n                    }\n                case 'res':\n                    return responder(response);\n            }\n        });\n\n        if (Object.keys(fieldErrors).length > 0) {\n            throw new ValidateError(fieldErrors, '');\n        }\n        return values;\n    }\n\n    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\n}\n\n// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa\n","module.exports = require(\"form-data\");","module.exports = require(\"axios\");","module.exports = require(\"dotenv\");","import {\n  Body,\n  Controller,\n  Get,\n  Path,\n  Post,\n  Query,\n  Route,\n  SuccessResponse,\n} from 'tsoa';\n\nimport { createNearAccount } from '../service/near';\nimport { CryptoCurves, PublicKey } from '@baf-wallet/interfaces';\nimport { ec, eddsa } from 'elliptic';\nimport { PublicKeyWrapper } from './common';\n\ninterface CreateNearAccountParams {\n  discordUserId: string;\n  nonce: string;\n  secpSig: ec.Signature;\n  edPubkey: PublicKeyWrapper;\n  edSig: eddsa.Signature;\n}\n\n@Route('near')\nexport class NearController extends Controller {\n  @SuccessResponse('204')\n  @Post('account')\n  public async createNearAccount(\n    @Body() requestBody: CreateNearAccountParams\n  ): Promise<void> {\n    const secpPubkey = Buffer.from(\n      '60cf347dbc59d31c1358c8e5cf5e45b822ab85b79cb32a9f3d98184779a9efc2',\n      'hex'\n    ); // TODO: derive from torus\n    await createNearAccount(\n      secpPubkey,\n      requestBody.edPubkey.pk,\n      requestBody.discordUserId,\n      requestBody.nonce,\n      requestBody.secpSig,\n      requestBody.edSig,\n      CryptoCurves.secp256k1\n    );\n  }\n}\n","import { CryptoCurves, KeyFormats, PublicKey } from '@baf-wallet/interfaces';\nimport { formatKey, NearAccount } from '@baf-wallet/multi-chain';\nimport { PublicKey as NearPublicKey } from 'near-api-js/lib/utils';\nimport { ChainUtil } from '@baf-wallet/multi-chain';\nimport { ec, eddsa } from 'elliptic';\n\n// Check the found public key verifies the signature produced by (nonce + userId)\nexport async function createNearAccount(\n  secpPubkey: PublicKey,\n  edPubkey: PublicKey,\n  discordUserId: string,\n  nonce: string,\n  secpSig: ec.Signature,\n  edSig: eddsa.Signature,\n  curve = CryptoCurves.secp256k1\n) {\n  const sigsValid = verifyBothSigs(\n    discordUserId,\n    nonce,\n    secpSig,\n    edSig,\n    secpPubkey,\n    edPubkey\n  );\n\n  if (!sigsValid) {\n    this.setStatus(403);\n    throw 'Proof that the sender owns this public key must provided';\n  }\n\n  if (curve !== CryptoCurves.secp256k1) {\n    throw 'Only secp256k1 curves are currently supported';\n  }\n\n  const near = await NearAccount.get();\n  const accountName = near.getAccountNameFromPubkey(secpPubkey, curve);\n\n  await near.accountCreator.createAccount(\n    accountName,\n    NearPublicKey.fromString(formatKey(edPubkey, KeyFormats.bs58))\n  );\n}\n\nfunction verifyBothSigs(\n  discordUserId: string,\n  nonce: string,\n  secpSig: ec.Signature,\n  edSig: eddsa.Signature,\n  secpPubkey: PublicKey,\n  edPubkey: PublicKey\n): boolean {\n  const msg = ChainUtil.createUserVerifyMessage(discordUserId, nonce);\n  return (\n    !ChainUtil.verifySignedSecp256k1(secpPubkey, msg, secpSig) ||\n    !ChainUtil.verifySignedEd25519(edPubkey, msg, edSig)\n  );\n}\n\nfunction toNearKey(edPubkey: PublicKey): NearPublicKey {\n  const x = NearPublicKey.fromString(formatKey(edPubkey, KeyFormats.bs58));\n  return x;\n}\n","module.exports = require(\"cors\");","import { NearAccount } from '@baf-wallet/multi-chain';\nimport * as bodyParser from 'body-parser';\nimport express from 'express';\nimport { RegisterRoutes } from '../build/routes';\nimport { constants } from './app/config/constants';\nimport * as cors from 'cors';\n\nconst app = express();\n\nNearAccount.setConfig(constants.nearAccountConfig);\napp.use(\n  bodyParser.urlencoded({\n    extended: true,\n  })\n);\napp.use(bodyParser.json());\nconst whitelist = ['http://localhost:8080',];\nconst corsOptions = {\n  origin: function (origin, callback) {\n    if (whitelist.indexOf(origin) !== -1) {\n      callback(null, true);\n    } else {\n      callback(new Error('Not allowed by CORS'));\n    }\n  },\n};\napp.use(cors(corsOptions));\n\nRegisterRoutes(app);\n\nconst port = process.env.port || 3333;\nconst server = app.listen(port, () => {\n  console.log(`Listening at http://localhost:${port}/`);\n});\nserver.on('error', console.error);\n"],"sourceRoot":""}